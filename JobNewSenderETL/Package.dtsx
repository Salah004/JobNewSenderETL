<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/25/2018 10:34:28 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DSIDEVF8HP099H"
  DTS:CreatorName="ANEM\s.lachi"
  DTS:DTSID="{29C1E29A-76D3-43FD-B0DF-B2DA889D6CC9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.113"
  DTS:LocaleID="1036"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="32"
  DTS:VersionGUID="{D232C607-D943-4E10-90B9-AA2BA74B663C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[10.16.100.183.Anem]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{59B4D915-BEA7-4F4B-8615-9AAB7871E238}"
      DTS:ObjectName="10.16.100.183.Anem">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=10.16.100.183;User ID=AnemUser;Initial Catalog=Anem;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAuTLHUGG0L0eQqq7KkwsXaAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADHc29LucQjCJsS00j+19pDNCZONH45xBDLCbUvJuuUpAAAAAAOgAAAAAIAACAAAADGw0Jc9qsNgkdcmlVmImtPv35Plnc8WYITraJcP9HT7yAAAADWOWhjOxj/KdHTz7TD5ZIjd+JoqbZqFIZCXvq7m+G7J0AAAAAkfSb3TGjgdlrlu3a+DF3/TUoQV1DyzW/HFNsGgIGuxQvwMay36JzfKJg/hB/6cvqOkFoTkyZp2FdhSGYzJPv+</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP Connection Manager]"
      DTS:CreationName="HTTP (KingswaySoft)"
      DTS:DTSID="{7881705A-AA48-43C7-9E94-F69B434E151D}"
      DTS:ObjectName="HTTP Connection Manager">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="BaseUrl=http://localhost:9200/;AuthenticationMode=Credentials;PathToTokenFile=;AccessTokenRequestLocation=HttpHeader;Domain=;UserName=;ProxyMode=NoProxy;ProxyUsername=;ProxyServer=;ProxyServerPort=0;ThrottleRate=0;ServiceTimeout=120;RetryOnIntermittentErrors=True;ChunkSize=0;CertificateLocation=Store;PathToCertificate=;IgnoreCertificateErrors=False;CustomHeaders={};HttpMethod=POST" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Tâche de flux de données"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tâche de flux de données"
      DTS:DTSID="{38348790-35AF-4060-8AC2-F307D419C3A6}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tâche de flux de données"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Tâche de flux de données\getDemandeursList"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Source OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;7"
              description="Source OLE DB"
              name="getDemandeursList"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Commande SQL à exécuter."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 'b0b0ec62-3b51-4b13-b5d1-a8ffce16d6a9' id</property>
                <property
                  dataType="System.String"
                  description="Variable contenant la commande SQL à exécuter."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Spécifie le mode utilisé pour accéder à la base de données."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="Mappages entre les paramètres de la commande SQL et les variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Tâche de flux de données\getDemandeursList.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[10.16.100.183.Anem]"
                  connectionManagerRefId="Package.ConnectionManagers[10.16.100.183.Anem]"
                  description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB]"
                  name="Sortie de source OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB].ExternalColumns[id]"
                      length="36"
                      lineageId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB].ExternalColumns[id]"
                      codePage="1252"
                      dataType="str"
                      length="36"
                      name="id" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB]"
                  isErrorOut="true"
                  name="Sortie d'erreur de source OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[id]"
                      codePage="1252"
                      dataType="str"
                      length="36"
                      lineageId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie d'erreur de source OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Tâche de flux de données\getOffers"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Inclut et exécute un code de script personnalisé. Par exemple, appliquez une règle d'entreprise qui limite la plage des valeurs valides dans une colonne « revenus » ou ajoutez des valeurs dans deux colonnes et calculez la moyenne de la somme.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;11"
              description="Inclut et exécute un code de script personnalisé. Par exemple, appliquez une règle d'entreprise qui limite la plage des valeurs valides dans une colonne « revenus » ou ajoutez des valeurs dans deux colonnes et calculez la moyenne de la somme."
              name="getOffers"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stocke le code source du composant"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Elasticsearch.Net;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Newtonsoft.Json.Linq;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    private ElasticLowLevelClient _elasticClient;
    public override void PreExecute()
    {
        base.PreExecute();
        var connectionConfiguration = new ConnectionConfiguration(new Uri("http://localhost:9200/"));
        _elasticClient = new ElasticLowLevelClient(connectionConfiguration);
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Entrée0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Entrée0_ProcessInputRow(Entrée0Buffer Row)
    {

        var id = Row.id.ToString();

        var query = @"
                    {
                           ""size"":2,
                           ""sort"":[
                              {
                                 ""TauxRapprochement"":{
                                    ""order"":""desc""
                                 }
                              }
                           ],
                           ""query"":{
                              ""bool"":{
                                 ""filter"":{
                                    ""bool"":{
                                       ""must"":[
                                          {
                                             ""term"":{
                                                ""DemandeurId"":""1995a87f-63f0-4309-a65e-e80756f8602a""
                                             }
                                          },
                                          {
                                             ""range"":{
                                                ""TauxRapprochement"":{
                                                   ""gte"":50
                                                }
                                             }
                                          }
                                       ]
                                    }
                                 }
                              }
                           }
                        }}";
        var searchResponse = _elasticClient.Search<string>("rapprochements", "rapprochement", query);

        var successful = searchResponse.Success;
        var responseJson = searchResponse.Body;

        //Row.offres.AddBlobData(responseJson);

        Row.offres = responseJson ;
       
    }


}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2206eb09e9df428fb0edf46ec965b0f7.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7C2B143E-FD1F-490C-B513-673B0F0C25C9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2206eb09e9df428fb0edf46ec965b0f7</RootNamespace>
    <AssemblyName>SC_2206eb09e9df428fb0edf46ec965b0f7</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Elasticsearch.Net, Version=5.0.0.0, Culture=neutral, PublicKeyToken=96c599bbe3e70f5d, processorArchitecture=MSIL">
      <HintPath>C:\Users\s.lachi\AppData\Local\Temp\Vsta\SSIS_SC140\Vsta__fQDKnQ9p0S7tU_ZhXrVxQ\packages\Elasticsearch.Net.5.6.2\lib\net45\Elasticsearch.Net.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\s.lachi\AppData\Local\Temp\Vsta\SSIS_SC140\Vsta__fQDKnQ9p0S7tU_ZhXrVxQ\packages\Newtonsoft.Json.11.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Entrée0Buffer: ScriptBuffer

{
    public Entrée0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String id
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool id_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String offres
    {
        set
        {
            this[1] = value;
        }
    }
    public bool offres_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("La propriété IsNull ne peut pas prendre la valeur False. Affectez plutôt une valeur à la colonne.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Settings.get_Default():SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Sett" +
    "ings")]

namespace SC_2206eb09e9df428fb0edf46ec965b0f7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Entrée 0", StringComparison.Ordinal))
        {
            Entrée0_ProcessInput(new Entrée0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Entrée0_ProcessInput(Entrée0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Entrée0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Entrée0_ProcessInputRow(Entrée0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="11.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2206eb09e9df428fb0edf46ec965b0f7</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2206eb09e9df428fb0edf46ec965b0f7</msb:DisplayName>
    <msb:ProjectId>{C25A314F-F198-47AF-9E65-A600BBA6C02C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2206eb09e9df428fb0edf46ec965b0f7.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2206eb09e9df428fb0edf46ec965b0f7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2206eb09e9df428fb0edf46ec965b0f7")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2206eb09e9df428fb0edf46ec965b0f7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2206eb09e9df428fb0edf46ec965b0f7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stocke la représentation binaire du composant"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2206eb09e9df428fb0edf46ec965b0f7.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
BwB+IQAAAADGAcQG8gALAJEhAAAAAMYB2gbyAAwAkyEAAAAAhhiLBAcBDQCiIQAAAACGGIsEBwEO
ALEhAAAAAIMYiwQGAA8AuSEAAAAAkwh3BA0BDwDlIQAAAACTCNQAEgEPAOwhAAAAAJMI4AAXAQ8A
9CEAAAAAlggnBh0BEAD7IQAAAACGGIsEBgAQAAMiAAAAAJEYkQQiARAAAAABAPcGAAABAHAEAAAC
AJEFAAADAEIEAAABAN4CAAABAN4CAAABAFgAAAACAKQAAAADAHAEAAAEAEIEAAABAHAEAAABAPcG
AAABAHwGAAABAHwGAAABAN4CCQCLBAEAEQCLBAYAGQCLBAoAKQCLBBAAMQCLBBAAOQCLBBAAQQCL
BBAASQCLBBAAUQCLBBAAWQCLBBAAYQCLBBAAaQCLBAYAqQCLBAYAyQCLBBUA2QCLBAYAmQDHAgYA
4QCLBBAAeQCLBCAAcQCLBCYAmQDSAgYAoQD+AjEADAAbBjsAcQARA0UAFADqBWsAFAD7Bm8AgQCL
BHQAgQBwBH4AgQCRBYIAiQAHA4YAgQBzA4sAgQCCA5AAgQB6AwEAEQGLBBAAgQDzBmsAgQAPBmsA
mQCLBAYAGQG/BZYAmQClBZ4AoQCLBAYAKQGSAKQAKQEEB60AsQCLBLMA0QCLBAYALgALAD0BLgAT
AEYBLgAbAGUBLgAjAG4BLgArAJcBLgAzAJcBLgA7AJcBLgBDAG4BLgBLAJ0BLgBTAJcBLgBbALQB
QwBjAP4BqQBzAGUByQBzAGUB4wBrAP4BAQF7AP4BGwAsAAMAAQAHAAUACAAHAAAAbQAmAQAAXgMq
AQAAawUmAQAAbAMqAQAAewQuAQAA9AAzAQAAKwY4AQIABgADAAIABwAFAAEACAAHAAEACQAJAAIA
EwALAAIAFAANAAEAFQANAAIAFgAPADUAZQAEgAAAAQAAAAAAAAAAAAAAAAArAAAABAAAAAAAAAAA
AAAAuwBgAAAAAAAOAAAAAAAAAAAAAADEAIYGAAAAAAUAAAAAAAAAAAAAAM0A/QUAAAAADgAAAAAA
AAAAAAAAxACjBgAAAAAEAAAAAAAAAAAAAAC7AIsDAAAAAAAAAAABAAAA3AQAAC8AYQAAAAAAAFBv
c3REYXRhYDEARWxhc3RpY3NlYXJjaFJlc3BvbnNlYDEARnVuY2AyAFNDXzIyMDZlYjA5ZTlkZjQy
OGZiMGVkZjQ2ZWM5NjViMGY3ADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIAZ2V0X2lkAGRlZmF1
bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmluZwBTZWFyY2gAVXJpAFN5c3Rl
bS5Db21wb25lbnRNb2RlbABTQ18yMjA2ZWIwOWU5ZGY0MjhmYjBlZGY0NmVjOTY1YjBmNy5kbGwA
Z2V0X2lkX0lzTnVsbABzZXRfb2ZmcmVzX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBy
ZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAENvbm5lY3Rpb25Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1l
TWFwAE91dHB1dE1hcABFbnRyw6llMEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18yMjA2ZWIwOWU5
ZGY0MjhmYjBlZGY0NmVjOTY1YjBmNy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfMjIwNmViMDllOWRmNDI4ZmIwZWRmNDZlYzk2NWIwZjcuUHJvcGVydGll
cwBWYXJpYWJsZXMAc2V0X29mZnJlcwBJQ29ubmVjdGlvbkNvbmZpZ3VyYXRpb25WYWx1ZXMAQnVm
ZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0
aW9ucwBTZWFyY2hSZXF1ZXN0UGFyYW1ldGVycwBnZXRfU3VjY2VzcwBPYmplY3QARWxhc3RpY3Nl
YXJjaC5OZXQARW5kT2ZSb3dzZXQAb3BfSW1wbGljaXQAZ2V0X0RlZmF1bHQAX2VsYXN0aWNDbGll
bnQARWxhc3RpY0xvd0xldmVsQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNj
cmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AEVudHLDqWUwX1Byb2Nlc3NJbnB1dABFbnRyw6llMF9Qcm9jZXNz
SW5wdXRSb3cATmV4dFJvdwBnZXRfQm9keQBnZXRfQXNzZW1ibHkAAAAAAC1oAHQAdABwADoALwAv
AGwAbwBjAGEAbABoAG8AcwB0ADoAOQAyADAAMAAvAACLPQ0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIgBzAGkAegBlACIAOgAyACwADQAKACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACIAcwBvAHIAdAAiADoA
WwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIgBUAGEAdQB4AFIAYQBwAHAAcgBvAGMAaABlAG0AZQBu
AHQAIgA6AHsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACIAbwByAGQAZQByACIAOgAiAGQAZQBzAGMAIgAN
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAiAHEAdQBlAHIAeQAiADoAewANAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIgBi
AG8AbwBsACIAOgB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAiAGYAaQBsAHQAZQByACIAOgB7AA0ACgAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAiAGIAbwBvAGwAIgA6AHsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACIAbQB1AHMA
dAAiADoAWwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewANAAoAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIgB0AGUAcgBtACIAOgB7AA0ACgAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAiAEQAZQBtAGEAbgBkAGUAdQByAEkAZAAiADoAIgAxADkA
OQA1AGEAOAA3AGYALQA2ADMAZgAwAC0ANAAzADAAOQAtAGEANgA1AGUALQBlADgAMAA3ADUANgBm
ADgANgAwADIAYQAiAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9ACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgAHsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACIAcgBhAG4AZwBlACIA
OgB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAiAFQAYQB1AHgA
UgBhAHAAcAByAG8AYwBoAGUAbQBlAG4AdAAiADoAewANAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIgBnAHQAZQAiADoANQAwAA0ACgAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9
AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9
AH0AAR1yAGEAcABwAHIAbwBjAGgAZQBtAGUAbgB0AHMAABtyAGEAcABwAHIAbwBjAGgAZQBtAGUA
bgB0AACAw0wAYQAgAHAAcgBvAHAAcgBpAOkAdADpACAASQBzAE4AdQBsAGwAIABuAGUAIABwAGUA
dQB0ACAAcABhAHMAIABwAHIAZQBuAGQAcgBlACAAbABhACAAdgBhAGwAZQB1AHIAIABGAGEAbABz
AGUALgAgAEEAZgBmAGUAYwB0AGUAegAgAHAAbAB1AHQA9AB0ACAAdQBuAGUAIAB2AGEAbABlAHUA
cgAgAOAAIABsAGEAIABjAG8AbABvAG4AbgBlAC4AARFFAG4AdAByAOkAZQAgADAAAXFTAEMAXwAy
ADIAMAA2AGUAYgAwADkAZQA5AGQAZgA0ADIAOABmAGIAMABlAGQAZgA0ADYAZQBjADkANgA1AGIA
MABmADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAK7iCn7b
HXhFtPdjbvFUO98ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEEBwESPQUgAQEScQUgAQESdQQH
Ag4OAyAADgUVEnkBHAkAARUSeQETAA4bMAEEFRJ9AR4ADg4VEnkBHBUSgIECEoCFEoCFAwoBDgUV
En0BDgMgAAIEIAATAAkgAwESRR0IEkkDBhJFAwYdCAQgAQ4IBCABAggFIAIBCBwHIAICDhGAkQUg
AR0ICAgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6XFYZNOCJCImEXc2AgMyRCJbFmbvj5w9dAwYS
OQMGEhQDBhIYAwYSTQMGElkDBhJdAwYSIAUgAQESDAQgAQECCSAEAQgOEkUSSQUgAQESTQQAABJZ
BAAAEl0FAAEBEl0EAAASIAMAAAEDKAAOAygAAgQIABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMjIwNmViMDllOWRmNDI4
ZmIwZWRmNDZlYzk2NWIwZjcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAcD8AAAAAAAAAAAAAij8AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAHw/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwAyADIAMAA2AGUAYgAwADkAZQA5AGQAZgA0ADIAOABmAGIAMABlAGQAZgA0ADYAZQBjADkANgA1
AGIAMABmADcAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIAMgAwADYAZQBiADAAOQBl
ADkAZABmADQAMgA4AGYAYgAwAGUAZABmADQANgBlAGMAOQA2ADUAYgAwAGYANwAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMgAyADAANgBl
AGIAMAA5AGUAOQBkAGYANAAyADgAZgBiADAAZQBkAGYANAA2AGUAYwA5ADYANQBiADAAZgA3AC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADIAMgAwADYAZQBi
ADAAOQBlADkAZABmADQAMgA4AGYAYgAwAGUAZABmADQANgBlAGMAOQA2ADUAYgAwAGYANwAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAnD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom du projet Microsoft Visual Studio Tools for Applications. Les noms des projets doivent être uniques dans un package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_2206eb09e9df428fb0edf46ec965b0f7</property>
                <property
                  dataType="System.String"
                  description="Spécifie le langage de programmation utilisé par le script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Spécifie une liste séparée par des virgules de variables en lecture seule."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Spécifie une liste séparée par des virgules de variables en lecture/écriture."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Liste des points d'arrêt présents dans le script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Somme de contrôle pour faire correspondre les métadonnées de composant avec les codes compilés."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">01</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Tâche de flux de données\getOffers.Inputs[Entrée 0]"
                  hasSideEffects="true"
                  name="Entrée 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Tâche de flux de données\getOffers.Inputs[Entrée 0].Columns[id]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="36"
                      cachedName="id"
                      lineageId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB].Columns[id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Tâche de flux de données\getOffers.Outputs[Sortie 0]"
                  name="Sortie 0"
                  synchronousInputId="Package\Tâche de flux de données\getOffers.Inputs[Entrée 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Tâche de flux de données\getOffers.Outputs[Sortie 0].Columns[offres]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Tâche de flux de données\getOffers.Outputs[Sortie 0].Columns[offres]"
                      name="offres" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Tâche de flux de données\sendOffers"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Inclut et exécute un code de script personnalisé. Par exemple, appliquez une règle d'entreprise qui limite la plage des valeurs valides dans une colonne « revenus » ou ajoutez des valeurs dans deux colonnes et calculez la moyenne de la somme.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;11"
              description="Inclut et exécute un code de script personnalisé. Par exemple, appliquez une règle d'entreprise qui limite la plage des valeurs valides dans une colonne « revenus » ou ajoutez des valeurs dans deux colonnes et calculez la moyenne de la somme."
              name="sendOffers"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stocke le code source du composant"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Entrée 0", StringComparison.Ordinal))
        {
            Entrée0_ProcessInput(new Entrée0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Entrée0_ProcessInput(Entrée0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Entrée0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Entrée0_ProcessInputRow(Entrée0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
//System.Net  
using System.Net;

//System.Net.Mail namespace required to send mail.  
using System.Net.Mail;

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.IO;
using System.Collections.Generic;
using System.Linq;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Entrée0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Entrée0_ProcessInputRow(Entrée0Buffer Row)
    {
        //Fetching Settings from WEB.CONFIG file.  
        //your email
        string emailSender = "******";
        //your password
        string emailSenderPassword = "******";
        string emailSenderHost = "smtp.gmail.com";
        int emailSenderPort = 587;
        Boolean emailIsSSL = true;

        //Fetching Email Body Text from EmailTemplate File.
        string FilePath = "****\\JobNewSenderETL\\offreMail.html";
        StreamReader str = new StreamReader(FilePath);
        string MailText = str.ReadToEnd();
        str.Close();

        //Fetching dtailsOfrre Text.
        string TxtFilePath = "****\\JobNewSenderETL\\detailsOffre.txt";
        StreamReader stream = new StreamReader(TxtFilePath);
        string detailsOffreTxtSave = stream.ReadToEnd();
        stream.Close();

        //Base class for sending email  
        MailMessage _mailmsg = new MailMessage();

        //Make TRUE because our body text is html  
        _mailmsg.IsBodyHtml = true;

        //Set From Email ID  
        _mailmsg.From = new MailAddress(emailSender);

        //Set Subject
        string subject = "subject";
        _mailmsg.Subject = subject;

        //Now set your SMTP   
        SmtpClient _smtp = new SmtpClient();

        //Set HOST server SMTP detail  
        _smtp.Host = emailSenderHost;

        //Set PORT number of SMTP  
        _smtp.Port = emailSenderPort;

        //Set SSL --> True / False  
        _smtp.EnableSsl = emailIsSSL;


        string offers = Row.offres;

        JObject jObject = JObject.Parse(offers);

        //email modifications
        JObject Jhits = (JObject)jObject["hits"];
        JArray a = (JArray)Jhits["hits"];
        IList<Hit> hits = a.ToObject<IList<Hit>>();
        
        for (int j = 0; j < hits.Count(); j++)
        {
            string detailsOffreTxt = detailsOffreTxtSave;
            detailsOffreTxt = detailsOffreTxt.Replace("[titre]", hits[j]._source.MetierFr);
            detailsOffreTxt = detailsOffreTxt.Replace("[entreprise]", hits[j]._source.RaisonSociale);
            detailsOffreTxt = detailsOffreTxt.Replace("[niveau]", hits[j]._source.NiveauInstructionFr);
            detailsOffreTxt = detailsOffreTxt.Replace("[experience]", hits[j]._source.Experience);
            detailsOffreTxt = detailsOffreTxt.Replace("[commune]", hits[j]._source.CommuneFr);
            detailsOffreTxt = detailsOffreTxt.Replace("[wilaya]", hits[j]._source.WilayaFr);
            detailsOffreTxt = detailsOffreTxt.Replace("[nb_poste]", hits[j]._source.NombrePlacesLibres);
            detailsOffreTxt = detailsOffreTxt.Replace("[contrat]", hits[j]._source.TypeContratFr);
            detailsOffreTxt = detailsOffreTxt.Replace("[date]", hits[j]._source.DateInscription);
            MailText = MailText.Replace("[offre]", detailsOffreTxt);
            MailText = MailText.Replace("[bg_entreprise]", hits[j]._source.RaisonSociale + " et [bg_entreprise]");
        }
        MailText = MailText.Replace("[offre]", "");
        MailText = MailText.Replace(" et [bg_entreprise]", "");

        //Set To Email ID
        MailText = MailText.Replace("[nom]", hits[0]._source.NomFr);
        MailText = MailText.Replace("[prenom]", hits[0]._source.PrenomFr);
        _mailmsg.To.Clear();
        _mailmsg.To.Add(hits[0]._source.Email);

        //Set Body Text of Email   
        _mailmsg.Body = MailText;

        //Set Sender UserEmailID, Password  
        NetworkCredential _network = new NetworkCredential(emailSender, emailSenderPassword);
        _smtp.Credentials = _network;

        //Send Method will send your MailMessage create above.  
        _smtp.Send(_mailmsg);
    }

    internal class Hit
    {
        public Guid _id;
        public Source _source;
    }
    internal class Source
    {
        public string MetierFr;
        public string RaisonSociale;
        public string NiveauInstructionFr;
        public string Experience;
        public string CommuneFr;
        public string WilayaFr;
        public string NombrePlacesLibres;
        public string TypeContratFr;
        public string DateInscription;
        public string Email;
        public string NomFr;
        public string PrenomFr;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Entrée0Buffer: ScriptBuffer

{
    public Entrée0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String offres
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool offres_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Settings.get_Default():SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Sett" +
    "ings")]

namespace SC_69dabd7dfc1e4635959bd974e82f024e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_69dabd7dfc1e4635959bd974e82f024e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2DAA63AE-088B-4028-A580-52E75CD19318}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_69dabd7dfc1e4635959bd974e82f024e</RootNamespace>
    <AssemblyName>SC_69dabd7dfc1e4635959bd974e82f024e</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\ABBOUD Echeikh Bakir\AppData\Local\Temp\Vsta\SSIS_SC140\VstanZl1N2Hzs0K4iHH3SZ__y0Q\packages\Newtonsoft.Json.11.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_69dabd7dfc1e4635959bd974e82f024e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_69dabd7dfc1e4635959bd974e82f024e</msb:DisplayName>
    <msb:ProjectId>{5B707F73-DA02-4468-9696-32399985A022}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_69dabd7dfc1e4635959bd974e82f024e.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_69dabd7dfc1e4635959bd974e82f024e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_69dabd7dfc1e4635959bd974e82f024e")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_69dabd7dfc1e4635959bd974e82f024e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_69dabd7dfc1e4635959bd974e82f024e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="11.0.2" targetFramework="net45" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stocke la représentation binaire du composant"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_69dabd7dfc1e4635959bd974e82f024e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
OgAAABAAAAABAAAAAwAAAAUAAAAGAAAAAgAAAAEAAAAGAAAAAQAAAAIAAAACAAAAAAD3AwEAAAAA
AAYApwIeBgYAOwMeBgYA8wELBg8AkgYAAAYAIAKvBAYAigKvBAYAawKvBAYAIgOvBAYAxwKvBAYA
4AKvBAYANwKvBAYAUgJ2AwoA+wIoAQ4A1QDhAw4AoAfhAwYAHABIAA4AmgN5BwYAZgdXBAYAawBX
BAoA3QUoARIAzgUoAQoAGwUoAQoAyQcoAQYA1gELBgYA7gU+BgYADwWaBA4ApgHLAw4ABwLLAw4A
ggGFBAYAuwEeBgYApwU1AAYAtAU1AA4ASQfhAxYAXAc/BRYAcwQ/BRYAeQg/BQYAkwNXBBoA7wAz
BQYAAQBIAA4AwQThAwYADwCsAw4ALwh5BwYA9wRXBAYASQFXBAYA+gBXBAYAjQivBAAAAAAkAAAA
AAABAAEAAQAQAHoEAAAQAAEAAQABABAAvwUAAFEAAQAFAAEAEACrBwAAXQABAAoAAQAQAD0HAABJ
AAMADgABABAA0AYAAEkABAAPAAAAEABFBqEGSQAFABAAAAEQAB0HoQZ1AAcAFAAFABAAkAcAAEkA
CAAXAAUAEADGAAAASQAKABgABgA9Bw0BBgDQBhEBAQC5BxUBAQC5BxUBEQBnBBkBEQByAR0BEQCr
ACEBBgBnACUBBgDNACkBBgCKBS0BBgDhAC0BBgB2BS0BBgC7AC0BBgBdBS0BBgBUBS0BBgDaBi0B
BgCTBS0BBgDXBC0BBgDxAy0BBgBnBS0BBgBtBS0BUCAAAAAAxgBZAwYAAQBYIAAAAADGAGQDBgAB
AGAgAAAAAMYAWAgwAQEAaiMAAAAAhhj+BQYAAgByIwAAAACGGP4FrQACAH0jAAAAAIYI7QY0AAUA
kiMAAAAAhggfBMkABQCbIwAAAACGAHEIyQAFAKMjAAAAAIYAhAfJAAUAqyMAAAAAhhj+BQYABQDL
IwAAAADGAEsINgEFAPAjAAAAAMYBQggwAQkAAyQAAAAAxgFYCDABCgAFJAAAAACGGP4FQAELABQk
AAAAAIYY/gVAAQwAIyQAAAAAgxj+BQYADQArJAAAAACTCOoFRgENAFckAAAAAJMIWgFLAQ0AXiQA
AAAAkwhmAVABDQBmJAAAAACWCJQHVgEOAG0kAAAAAIYY/gUGAA4AdSQAAAAAkRgEBlsBDgAjJAAA
AACGGP4FBgAOACMkAAAAAIYY/gUGAA4AAAABAHUIAAABAOMFAAACAPgGAAADACkFAAABAC0AAAAC
AB4BAAADAOMFAAAEACkFAAABAOMFAAABAHUIAAABAM8HAAABAM8HAAABAHADCQD+BQEAEQD+BQYA
GQD+BQoAKQD+BRAAMQD+BRAAOQD+BRAAQQD+BRAASQD+BRAAUQD+BRAAWQD+BRAAYQD+BRAAaQD+
BQYAwQD+BQYA4QD+BRUA8QD+BQYAuQBZAwYAuQBkAwYA+QD+BRAAAQFwADQAAQGaAQYAcQD+BQYA
cQAxBDgACQH+BRAAcQBeBD0AcQBtBxAAeQD+BQYAeQAFCBAAeQD8BwEAeQBABDgAEQGgAUQAEQFO
BEsAGQFkB1IADABOBGgAKQGjAG4AKQFVB3QAMQHZB3oAcQAIBYsAFAChBQYAQQFjABAAcQCACBAA
iQD+BZoAeQAmB6AAeQB6AKcAoQD+Ba0AoQDjBbcAoQD4BrsAqQCQA78AoQAqBMQAoQBxCMkAoQCE
B8kAuQD+BQYAKQE2B80AuQAMB9UAkQD+BQYAYQEMAdsAYQGJCOQAyQD+BeoA6QD+BQYALgALAHYB
LgATAH8BLgAbAJ4BLgAjAKcBLgArANABLgAzANABLgA7ANABLgBDAKcBLgBLANYBLgBTANABLgBb
AO0BQwBjADcCaQBzAJ4BiQBzAJ4B4QB7ADcC4wBrADcCGwADAAEABwADAAgABQAAAPEGXwEAACME
YwEAAO4FZwEAAHoBbAEAAJgHcQECAAYAAwACAAcABQACABEABwACABIACQABABMACQACABQACwBh
AJEABIAAAAEAAAAAAAAAAAAAAAAAfwAAAAQAAAAAAAAAAAAAAPIAPwAAAAAADgAAAAAAAAAAAAAA
+wDfBwAAAAAEAAAAAAAAAAAAAADyAFcEAAAAAA4AAAAAAAAAAAAAAPsADggAAAAACwAAAAAAAAAA
AAAABAHnBAAAAAAEAAAAAAAAAAAAAADyAE4BAAAAAAAAAAABAAAATwYAAAkAAgAKAAIAQQBYAEkA
hgAAAAAAAElFbnVtZXJhYmxlYDEAQ29sbGVjdGlvbmAxAElMaXN0YDEAPE1vZHVsZT4ASW5wdXRJ
RABTeXN0ZW0uSU8AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAF9pZABH
dWlkAFJlYWRUb0VuZABTZW5kAFNDXzY5ZGFiZDdkZmMxZTQ2MzU5NTliZDk3NGU4MmYwMjRlAFJl
cGxhY2UAZGVmYXVsdEluc3RhbmNlAEV4cGVyaWVuY2UAU291cmNlAF9zb3VyY2UATWFpbE1lc3Nh
Z2UAUmFpc29uU29jaWFsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5
c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDbG9zZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAR2V0U3RyaW5nAE5ldHdvcmtDcmVkZW50aWFsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAEVtYWlsAFNDXzY5
ZGFiZDdkZmMxZTQ2MzU5NTliZDk3NGU4MmYwMjRlLmRsbABnZXRfb2ZmcmVzX0lzTnVsbABzZXRf
SXNCb2R5SHRtbABzZXRfRW5hYmxlU3NsAGdldF9JdGVtAFN5c3RlbQBzZXRfRnJvbQByZXNvdXJj
ZU1hbgBKVG9rZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARGF0ZUluc2Ny
aXB0aW9uAE5ld3RvbnNvZnQuSnNvbgBTdHJpbmdDb21wYXJpc29uAGdldF9UbwBDdWx0dXJlSW5m
bwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABTeXN0ZW0uTGlucQBOZXd0b25zb2Z0Lkpzb24uTGlu
cQBXaWxheWFGcgBDb21tdW5lRnIATm9tRnIAUHJlbm9tRnIATml2ZWF1SW5zdHJ1Y3Rpb25GcgBN
ZXRpZXJGcgBUeXBlQ29udHJhdEZyAENsZWFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAEVudHLD
qWUwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzY5ZGFiZDdkZmMxZTQ2MzU5NTliZDk3NGU4MmYw
MjRlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ182OWRh
YmQ3ZGZjMWU0NjM1OTU5YmQ5NzRlODJmMDI0ZS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBOb21icmVQ
bGFjZXNMaWJyZXMAZ2V0X29mZnJlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAEVxdWFscwBDb25uZWN0aW9ucwBNYWlsQWRkcmVz
cwBDb25jYXQASk9iamVjdABUb09iamVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AEVuZE9mUm93
c2V0AEhpdABnZXRfRGVmYXVsdABTbXRwQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9u
ZW50AFNjcmlwdENvbXBvbmVudABDb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AHNl
dF9Qb3J0AHNldF9Ib3N0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElDcmVkZW50
aWFsc0J5SG9zdABFbnRyw6llMF9Qcm9jZXNzSW5wdXQARW50csOpZTBfUHJvY2Vzc0lucHV0Um93
AE5leHRSb3cASkFycmF5AHNldF9Cb2R5AGdldF9Bc3NlbWJseQAAAAANKgAqACoAKgAqACoAAB1z
AG0AdABwAC4AZwBtAGEAaQBsAC4AYwBvAG0AAEcqACoAKgAqAFwASgBvAGIATgBlAHcAUwBlAG4A
ZABlAHIARQBUAEwAXABvAGYAZgByAGUATQBhAGkAbAAuAGgAdABtAGwAAEsqACoAKgAqAFwASgBv
AGIATgBlAHcAUwBlAG4AZABlAHIARQBUAEwAXABkAGUAdABhAGkAbABzAE8AZgBmAHIAZQAuAHQA
eAB0AAAPcwB1AGIAagBlAGMAdAAACWgAaQB0AHMAAA9bAHQAaQB0AHIAZQBdAAAZWwBlAG4AdABy
AGUAcAByAGkAcwBlAF0AABFbAG4AaQB2AGUAYQB1AF0AABlbAGUAeABwAGUAcgBpAGUAbgBjAGUA
XQAAE1sAYwBvAG0AbQB1AG4AZQBdAAARWwB3AGkAbABhAHkAYQBdAAAVWwBuAGIAXwBwAG8AcwB0
AGUAXQAAE1sAYwBvAG4AdAByAGEAdABdAAANWwBkAGEAdABlAF0AAA9bAG8AZgBmAHIAZQBdAAAf
WwBiAGcAXwBlAG4AdAByAGUAcAByAGkAcwBlAF0AACcgAGUAdAAgAFsAYgBnAF8AZQBuAHQAcgBl
AHAAcgBpAHMAZQBdAAABAAtbAG4AbwBtAF0AABFbAHAAcgBlAG4AbwBtAF0AABFFAG4AdAByAOkA
ZQAgADAAAXFTAEMAXwA2ADkAZABhAGIAZAA3AGQAZgBjADEAZQA0ADYAMwA1ADkANQA5AGIAZAA5
ADcANABlADgAMgBmADAAMgA0AGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAACsyuGhNSkuT6jI+Q4I1H4yAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtGAcODg4O
CAIODhI5DhI9FRJBARIkEkUIDgMgAA4EIAEBAgYgAQESgIUGAAESgIkOBiABEoCNDgUwAQAeAAgK
ARUSQQESJAYVEkEBEiQFIAETAAgFIAIODg4FAAIODg4LEAEBCBUSgJ0BHgAECgESJAUgABKAoQgV
EoClARKAhQUgAgEODgYgAQESgKkFIAEBEjkJIAMBElUdCBJZAwYSVQMGHQgEIAEOCAQgAQIIAyAA
AgcgAgIOEYCtBSABHQgICAABEoCxEYC1BSAAEoC5ByACAQ4SgLkIt3pcVhk04IkIiYRdzYCAzJEI
MK1P5rKmru0DBhIUAwYSGAMGEl0DBhJlAwYSaQMGEiADBhFNAwYSKAIGDgUgAQESDAkgBAEIDhJV
ElkFIAEBEl0EAAASZQQAABJpBQABARJpBAAAEiADAAABAygADgMoAAIECAASZQQIABJpBAgAEiAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzY5
ZGFiZDdkZmMxZTQ2MzU5NTliZDk3NGU4MmYwMjRlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAJDoAAAAAAAAAAAAAPjoAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADA6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADYAOQBkAGEAYgBkADcAZABmAGMAMQBlADQANgAzADUAOQA1ADkAYgBkADkANwA0AGUAOAAy
AGYAMAAyADQAZQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgA5AGQAYQBiAGQANwBk
AGYAYwAxAGUANAA2ADMANQA5ADUAOQBiAGQAOQA3ADQAZQA4ADIAZgAwADIANABlAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2ADkAZABh
AGIAZAA3AGQAZgBjADEAZQA0ADYAMwA1ADkANQA5AGIAZAA5ADcANABlADgAMgBmADAAMgA0AGUA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgA5AGQAYQBi
AGQANwBkAGYAYwAxAGUANAA2ADMANQA5ADUAOQBiAGQAOQA3ADQAZQA4ADIAZgAwADIANABlAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABQOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom du projet Microsoft Visual Studio Tools for Applications. Les noms des projets doivent être uniques dans un package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_69dabd7dfc1e4635959bd974e82f024e</property>
                <property
                  dataType="System.String"
                  description="Spécifie le langage de programmation utilisé par le script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Spécifie une liste séparée par des virgules de variables en lecture seule."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Spécifie une liste séparée par des virgules de variables en lecture/écriture."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Liste des points d'arrêt présents dans le script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Somme de contrôle pour faire correspondre les métadonnées de composant avec les codes compilés."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">38</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Tâche de flux de données\sendOffers.Inputs[Entrée 0]"
                  hasSideEffects="true"
                  name="Entrée 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Tâche de flux de données\sendOffers.Inputs[Entrée 0].Columns[offres]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="offres"
                      lineageId="Package\Tâche de flux de données\getOffers.Outputs[Sortie 0].Columns[offres]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Tâche de flux de données.Paths[Sortie 0]"
              endId="Package\Tâche de flux de données\sendOffers.Inputs[Entrée 0]"
              name="Sortie 0"
              startId="Package\Tâche de flux de données\getOffers.Outputs[Sortie 0]" />
            <path
              refId="Package\Tâche de flux de données.Paths[Sortie de source OLE DB]"
              endId="Package\Tâche de flux de données\getOffers.Inputs[Entrée 0]"
              name="Sortie de source OLE DB"
              startId="Package\Tâche de flux de données\getDemandeursList.Outputs[Sortie de source OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Cette section CDATA contient des informations sur la disposition du package. Elle comprend des informations telles que les coordonnées (x,y), la largeur et la hauteur.-->
<!--Si vous modifiez manuellement cette section et commettez une erreur, vous pouvez la supprimer. -->
<!--Le package pourra toujours se charger normalement, mais les informations de disposition précédente seront perdues et le concepteur réorganisera automatiquement les éléments sur l'aire de conception.-->
<Objects
  Version="8">
  <!--Chaque nœud ci-dessous contiendra des propriétés qui n'affectent pas le comportement d'exécution.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="205,42"
          Id="Package\Tâche de flux de données"
          TopLeft="379,128" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Tâche de flux de données">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="124,42"
          Id="Package\Tâche de flux de données\getOffers"
          TopLeft="439,135" />
        <NodeLayout
          Size="130,42"
          Id="Package\Tâche de flux de données\sendOffers"
          TopLeft="432,245" />
        <NodeLayout
          Size="174,42"
          Id="Package\Tâche de flux de données\getDemandeursList"
          TopLeft="407,27" />
        <EdgeLayout
          Id="Package\Tâche de flux de données.Paths[Sortie de source OLE DB]"
          TopLeft="497.5,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Tâche de flux de données.Paths[Sortie 0]"
          TopLeft="499,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68"
              Start="0,0"
              End="0,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Tâche de flux de données\getDemandeursList">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>